openapi: "3.0.0"
info:
  title: "User API"
  version: "1.0.0"
  description: "A simple user API"
components:
  schemas:
    User:
      type: object
      required:
        - name
        - email
      properties:
        id:
          type: integer
          description: The auto-generated id of the user
        name:
          type: string
          description: The name of the user
        email:
          type: string
          format: email
          description: The email of the user
      example:
        id: 1
        name: fanthom
        email: fanthom@gmail.com
tags:
  - name: Users
    description: The user managing API
paths:
  /users:
    get:
      summary: Returns the list of all the users
      tags: [Users]
      responses:
        200:
          description: The list of the users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create new users
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: The user was successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Invalid user data
  /users/{id}:
    get:
      summary: Get user by id
      tags: [Users]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The user id
      responses:
        200:
          description: The user description by id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: The user was not found
    put:
      summary: Update user by id
      tags: [Users]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The user id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        200:
          description: The user was successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Invalid user data
        404:
          description: The user was not found
        500:
          description: Some error happened
    delete:
      summary: Delete user by id
      tags: [Users]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The user id
      responses:
        200:
          description: The user was successfully deleted
        404:
          description: The user was not found
        500:
          description: Some error happened
